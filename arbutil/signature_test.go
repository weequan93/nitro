package arbutil

import (
	"github.com/stretchr/testify/require"
	"testing"

	"github.com/ethereum/go-ethereum/common"
)

var signData = common.Hex2Bytes("0x7b227479706573223a7b22454950373132446f6d61696e223a5b7b226e616d65223a226e616d65222c2274797065223a22737472696e67227d2c7b226e616d65223a2276657273696f6e222c2274797065223a22737472696e67227d2c7b226e616d65223a22636861696e4964222c2274797065223a2275696e74323536227d2c7b226e616d65223a22766572696679696e67436f6e7472616374222c2274797065223a2261646472657373227d5d2c224d657373616765223a5b7b226e616d65223a2254696d657374616d70222c2274797065223a22737472696e67227d2c7b226e616d65223a224f7065726174696f6e222c2274797065223a22737472696e67227d2c7b226e616d65223a224368696c64222c2274797065223a2261646472657373227d5d7d2c227072696d61727954797065223a224d657373616765222c22646f6d61696e223a7b226e616d65223a2244657269775375624163636f756e745369676e6174757265222c2276657273696f6e223a2231222c22636861696e4964223a35353939303737333933372c22766572696679696e67436f6e7472616374223a22307830303030303030303030303030303030303030303030303030303030303030303030303030374539227d2c226d657373616765223a7b2254696d657374616d70223a2231373336313633353231222c224f7065726174696f6e223a224772616e74222c224368696c64223a22307838663438313633643139333264633232383663633764316632363065303963366564303761316530227d7d")
var signature = common.Hex2Bytes("0x7b227479706573223a7b22454950373132446f6d61696e223a5b7b226e616d65223a226e616d65222c2274797065223a22737472696e67227d2c7b226e616d65223a2276657273696f6e222c2274797065223a22737472696e67227d2c7b226e616d65223a22636861696e4964222c2274797065223a2275696e74323536227d2c7b226e616d65223a22766572696679696e67436f6e7472616374222c2274797065223a2261646472657373227d5d2c224d657373616765223a5b7b226e616d65223a2254696d657374616d70222c2274797065223a22737472696e67227d2c7b226e616d65223a224f7065726174696f6e222c2274797065223a22737472696e67227d5d7d2c227072696d61727954797065223a224d657373616765222c22646f6d61696e223a7b226e616d65223a2244657269775375624163636f756e745369676e6174757265222c2276657273696f6e223a2231222c22636861696e4964223a35353939303737333933372c22766572696679696e67436f6e7472616374223a22307830303030303030303030303030303030303030303030303030303030303030303030303030374539227d2c226d657373616765223a7b2254696d657374616d70223a2231373336313633353231222c224f7065726174696f6e223a225265766f6b65227d7d")

type SignTestCase struct {
	SignData  []byte
	Signature []byte
	Result    bool
}

func TestParseTypeDataNSignature(t *testing.T) {

	testCases := []SignTestCase{
		{SignData: signData, Signature: signature},
	}

	for i, testCase := range testCases {
		_, _, validSignature, err := ParseTypeDataNSignature(testCase.SignData, testCase.Signature)
		if err != nil {
			require.Fail(t, "Fail parse signature read is allowed sub-account address")
		}

		if validSignature != testCase.Result {
			require.Fail(t, "Fail parse signature fail  for testcase i", i)
		}
	}

}
